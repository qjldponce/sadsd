 from flask import Flask

app = Flask(__name__)

@app.route('/')

def getRouter():
    return {'R1': '192.168.5.10'}


if __name__ == '__main__':
    app.run() #run our Flask app 
from flask import Flask, jsonify, request

app = Flask (name)

movies = [
    {
    "name": "The Shawshank Redemption",
    "cast": ["Tim Robbins", "Morgan Freeman", "Bob Gunton", "William Sadler"],
    "genres": ["Drama"]
},
{
    "name": "The Godfather ",
    "cast": ["Marlon Brando", "Al Pacino", "James Caan", "Diane Keaton"],
    "genres": ["Crime", "Drama"]
}
]

@app.route('/movies', methods=['GET'])
def getMovies():
    return jsonify(movies)

@app.route('/movies', methods=['POST'])
def add_movie():
    movie = request.get_json()
    movies.append(movie)
    return {'id': len(movies)}, 200

@app.route('/movies', methods=['DELETE'])
def delete_movie(index):
    movies.pop(index)
    return 'None',200

if name == 'main':
    app.run() #run our Flask app



from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy
from flask_marshmallow import Marshmallow

app = Flask(__name__)

app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///School.sqlite'

db = SQLAlchemy(app)
ma = Marshmallow(app)

class Student(db.Model):
    tablename = "student"
    student_id = db.Column(db.String(50), primary_key=True)
    student_firstname = db.Column(db.String(50))
    student_midname = db.Column(db.String(50))
    student_lname = db.Column(db.String(50))

    def __init__(self, student_id, student_firstname, student_midname, student_lname):
        self.student_id = student_id
        self.student_firstname = student_firstname
        self.student_midname = student_midname
        self.student_lname = student_lname

class StudentSchema(ma.Schema):
    class Meta:
        fields = ("student_id", "student_firstname", "student_midname", "student_lname")

student_schema = StudentSchema()
students_schema = StudentSchema(many=True)

@app.route('/students', methods=['POST'])
def create_student():
    student_id = request.json.get('student_id')
    student_firstname = request.json.get('student_firstname')
    student_midname = request.json.get('student_midname')
    student_lname = request.json.get('student_lname')
    new_student = Student(student_id, student_firstname, student_midname, student_lname)
    db.session.add(new_student)
    db.session.commit()

    return student_schema.jsonify(new_student)

@app.route('/students', methods=['GET'])
def read_all():
    students = Student.query.all()
    result = students_schema.dump(students)
    return students_schema.jsonify(result).data

if __name__ == '__main__':
    app.run(debug=True) 
