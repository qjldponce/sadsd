[routers]
R1 ansible_host=10.10.10.1
R2 ansible_host=10.10.10.2

[routers:vars]
ansible_user=cisco
ansible_password=cisco123
ansible_connection=network_cli
ansible_network_os=ios
ansible_port=22
ansible_become=yes
ansible_become_method=enable
ansible_become_pass=cisco123

[ubuntu]
192.168.20.2 ansible_ssh_pass=cisco123 ansible_ssh_user=gabriel ansible_password=cisco123 ansible_port=22 ansible_become=yes ansible_sudo_pass=cisco123
sudo nano ~/.ssh/config
Host *
    Port 22
    User cisco
    StrictHostKeyChecking=no
    UserKnownHostsFile=/dev/null
    KexAlgorithms +diffie-hellman-group1-sha1
    Ciphers +3des-cbc

    SendEnv LANG LC_*
    Ciphers +aes256-cbc
    
[defaults]
inventory = ./hosts
host_key_checking = false
timeout = 15 
deprecation_warnings=False
remote_user = Gabriel
<title>jdlamzon-tip website</title>
<body>
    <h1>Hello World!</h1>

    <p>This is the landing page of <strong>jdlamzon-tip</strong>
---
- name: Installing Apache2 Server and Updating the Firewall
  hosts: ubuntu

  tasks:
  - name: Installing Apache
    apt:
      name: apache2
      state: present

  - name: Starting apache2 service
    service:
      name: apache2
      state: started
      enabled: yes

  - name: Allowing access to TCP Port 80
    ufw:
      rule: allow
      port: '80'
      proto: tcp

  - name: Enabling firewall
    ufw:
      state: enabled

- name: Creating the website
  hosts: ubuntu

  tasks:
  - name: Creating HTML test file
    copy:
      src: ./index.html
      dest: /var/www/html/index.html
      owner: root
      group: root
      mode: '0644'
    register: index

  - name: Starting the web service
    service:
      name: apache2
      state: restarted
      enabled: yes
    when: index.changed

  - name: Allowing access to TCP Port 80
    ufw:
      rule: allow
      port: '80'
      proto: tcp

  - name: Reloading ufw
    ufw:
      state: reloaded
      
      
      
      
[routers]
R1 ansible_host=10.10.10.1
R2 ansible_host=10.10.10.2

[routers:vars]
ansible_user=cisco
ansible_password=cisco123
ansible_connection=network_cli
ansible_network_os=ios
ansible_port=22
ansible_become=yes
ansible_become_method=enable
ansible_become_pass=cisco123

[ubuntu]
192.168.20.2 ansible_ssh_pass=cisco123 ansible_ssh_user=gabriel ansible_password=cisco123 ansible_port=22 ansible_become=yes ansible_sudo_pass=cisco123  



---
- name: Configure OSPF on R1
  hosts: R1
  gather_facts: false
  connection: local

  vars:
    cli:
      username: cisco
      password: cisco123

  tasks:
    - name: Enable OSPF on R1
      ios_config:
        provider: "{{ cli }}"
        authorize: yes
        parents: router ospf 1
        lines:
          - network 0.0.0.0 255.255.255.255 area 0
        
      register: print_output
    - debug: var=print_output

- name: Configure OSPF on R2
  hosts: R2
  gather_facts: false
  connection: local

  vars:
    cli:
      username: cisco
      password: cisco123

  tasks:
    - name: Enable OSPF on R2
      ios_config:
        provider: "{{ cli }}"
        authorize: yes
        parents: router ospf 1
        lines:
          - network 0.0.0.0 255.255.255.255 area 0
        
      register: print_output
    - debug: var=print_output
    
    
---
- name: Configure ACL on R2
  hosts: R2
  gather_facts: false
  connection: local

  tasks:
    - name: Configure ACL inbound
      ios_config:
        lines:
          - ip access-group 110 in
        parents: interface FastEthernet0/0

    - name: Create inbound ACL rules for R2
      ios_config:
        lines:
          - access-list 110 deny icmp any any echo-reply
          - access-list 110 permit ip any any
        before: no access-list 110
        match: exact
